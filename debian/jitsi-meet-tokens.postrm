#!/bin/sh
# postrm script for jitsi-meet-tokens
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <overwriter>
#          <overwriter-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

# Load debconf
. /usr/share/debconf/confmodule


case "$1" in
    remove)

        db_get jitsi-meet-prosody/prosody_config
        PROSODY_HOST_CONFIG=$RET

        if [ -f "$PROSODY_HOST_CONFIG" ] ; then

            db_get jitsi-meet-tokens/appid
            APP_ID=$RET

            db_get jitsi-meet-tokens/appsecret
            APP_SECRET=$RET

            # Revert prosody config
            sed -i 's/authentication = "token" -- do not delete me/authentication = "jitsi-anonymous" -- do not delete me/g' $PROSODY_HOST_CONFIG
            sed -i "s/ app_id=\"$APP_ID\"/ --app_id=\"example_app_id\"/g" $PROSODY_HOST_CONFIG
            sed -i "s/ app_secret=\"$APP_SECRET\"/ --app_secret=\"example_app_secret\"/g" $PROSODY_HOST_CONFIG
            sed -i '/^\s*"token_verification"/ s/"token_verification"/-- "token_verification"/' $PROSODY_HOST_CONFIG

            if [ -x "/etc/init.d/prosody" ]; then
                invoke-rc.d prosody restart || true
            fi
        fi

        db_stop
    ;;

    purge)
        # Clear the debconf variable
        db_purge
    ;;

    upgrade|failed-upgrade|abort-install|abort-upgrade|disappear)
    ;;

    *)
        echo "postrm called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

db_stop

exit 0
