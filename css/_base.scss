/**
 * Safari will limit input in input elements to one character when user-select
 * none is applied. Other browsers already support selecting within inputs while
 * user-select is none. As such, disallow user-select except on inputs.
 */
* {
    -webkit-user-select: none;
    user-select: none;

    // Firefox only
    scrollbar-width: thin;
    scrollbar-color: rgba(0, 0, 0, .5) transparent;
}

input,
textarea {
    -webkit-user-select: text;
    user-select: text;
}

html {
    height: 100%;
    width: 100%;
    overflow: hidden;
}

body {
    margin: 0px;
    width: 100%;
    height: 100%;
    font-family: $baseFontFamily; // Ensure base font family
    font-size: 1rem; // Base font size for rem calculation (16px default)
    font-weight: 400;
    overflow: hidden;
    color: $textColorPrimary; // Use theme variable
    background: $backgroundColorDark; // Use theme variable
}

h1, h2, h3, h4, h5, h6 {
    font-family: $baseFontFamily;
    color: $textColorPrimary;
    margin-top: 0;
    margin-bottom: $spacingMedium; // Use theme variable
    font-weight: 600; // Semibold for headings
}

h1 { font-size: 2.5rem; } // ~40px
h2 { font-size: 2rem; }   // ~32px
h3 { font-size: 1.75rem; } // ~28px
h4 { font-size: 1.5rem; }  // ~24px
h5 { font-size: 1.25rem; } // ~20px
h6 { font-size: 1rem; }    // ~16px

/**
 * This will hide the focus indicator if an element receives focus via the mouse,
 * but it will still show up on keyboard focus, thus preserving accessibility.
 */
.js-focus-visible :focus:not(.focus-visible) {
  outline: none;
}

.jitsi-icon {
    &-default svg {
        fill: $textColorPrimary; // Use theme variable
    }
}

.disabled .jitsi-icon svg {
    fill: $textColorSecondary; // Use theme variable for disabled state (dimmer)
}

.jitsi-icon.gray svg { // This class might be used for specific icons that need a neutral color
    fill: $textColorSecondary; // Use theme variable
    cursor: pointer;
}

p {
    margin: 0;
}

body, input, textarea, keygen, select, button {
    font-family: $baseFontFamily; // Important removed, should cascade
}

button, input, select, textarea {
    margin: 0;
    vertical-align: baseline;
    font-size: 1em; // Base font size, specific elements can override
    font-family: $baseFontFamily; // Ensure all form elements inherit font
}

button, select, input[type="button"],
input[type="reset"], input[type="submit"] {
    cursor: pointer;
}

textarea {
    word-wrap: break-word;
    resize: none; // Consider allowing vertical resize: resize: vertical;
    line-height: 1.5em;
    padding: $spacingSmall $spacingMedium; // Default padding
    border: 1px solid $borderColor;
    border-radius: calc($borderRadius / 1.5); // e.g., 7px
    background-color: $backgroundColorDark; // Default input background
    color: $textColorPrimary;
    &::placeholder {
        color: $textColorSecondary;
    }
}

input[type='text'], input[type='password'] { // Specific input types
    outline: none;
    resize: none;
    padding: $spacingSmall $spacingMedium;
    border: 1px solid $borderColor;
    border-radius: calc($borderRadius / 1.5);
    background-color: $backgroundColorDark;
    color: $textColorPrimary;
    &::placeholder {
        color: $textColorSecondary;
    }
}

// General button styling - to be overridden by specific classes
button {
    color: $textColorPrimary;
    background-color: $primaryColor;
    border-radius: $borderRadius; // Use theme variable (10px)
    padding: $spacingSmall $spacingMedium; // Default padding
    border: none;
    font-weight: 600; // Semibold for buttons

    &:hover {
        background-color: lighten($primaryColor, 5%); // Consistent hover effect
    }

    &.no-icon { // This class seems to be for text-only buttons
        padding: $spacingSmall $spacingMedium; // Ensure consistent padding
    }

    &:disabled, &[disabled] { // Styling for disabled buttons
        background-color: darken($backgroundColorLight, 10%); // A muted background
        color: $textColorSecondary;
        cursor: not-allowed;
        // Consider box-shadow: none; if default buttons have shadow
    }
}

button, // display: block was here, removing it for more flexible button usage inline
form { // form display: block is fine
    display: block;
}

.watermark {
    display: block;
    position: absolute;
    top: 15;
    width: $watermarkWidth;
    height: $watermarkHeight;
    background-size: contain;
    background-repeat: no-repeat;
    z-index: $watermarkZ;
}

.leftwatermark {
    max-width: 140px;
    max-height:70px;
    left: 32px;
    top: 32px;
    background-position: center left;
    background-repeat: no-repeat;
    background-size: contain;

    &.no-margin {
        left:0;
        top:0;
    }
}

.rightwatermark {
    right: 32px;
    top: 32px;
    background-position: center right;
}

.poweredby {
    position: absolute;
    left: 25;
    bottom: 7;
    font-size: 0.875rem;
    color: rgba(255,255,255,.50);
    text-decoration: none;
    z-index: $watermarkZ;
}

/**
 * Re-style default OS scrollbar.
 */
::-webkit-scrollbar {
    background: transparent;
    width: 7px;
    height: $scrollHeight;
}

::-webkit-scrollbar-button {
    display: none;
}

::-webkit-scrollbar-track {
    background: transparent;
}

::-webkit-scrollbar-track-piece {
    background: transparent;
}

::-webkit-scrollbar-thumb {
    background: #3D3D3D;
    border-radius: 4px;
}

/* Necessary for the new icons to work properly. */
.jitsi-icon svg path {
    fill: inherit !important;
}

.sr-only {
    border: 0 !important;
    clip: rect(1px, 1px, 1px, 1px) !important;
    clip-path: inset(50%) !important;
    height: 1px !important;
    margin: -1px !important;
    overflow: hidden !important;
    padding: 0 !important;
    position: absolute !important;
    width: 1px !important;
    white-space: nowrap !important;
}
